pipeline {
    agent any

    tools {
        nodejs 'NodeJS'
    }

    environment {
        SSH_PRIVATE_KEY = credentials('ab1ed2fc-ffdc-4b71-b710-476ae9705f3b')
        VM_IP = '20.224.162.44'
        VM_USER = 'azureuser'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/HarshOnCloud/hardcodedcompany.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'npm install'
            }
        }
         stage('Update Packages') {
            steps {
                sh 'npm update'
            }
        }

        stage('Lint and Fix') {
            steps {
                sh 'npm run lint -- --fix'
            }
        }

        stage('Prettier Fix') {
            steps {
                sh 'npm run prettier -- --write .'
            }
        }
        stage('Run Tests') {
            steps {
                sh 'npm test'
            }
        }
         stage('Build') {
            steps {
                // Navigate to the specific folder
                dir('dashboard/starter-example') {
                    // Perform the build (adjust command as needed)
                    sh 'npm install --legacy-peer-deps'
                    sh 'npm run build'
                }
            }
        }

       
        stage('Archive Artifacts') {
            steps {
                
                archiveArtifacts artifacts: 'dashboard/starter-example/.next/**', allowEmptyArchive: true
                sh 'ls -la dashboard/starter-example/.next'
            }
        }
        stage('Login to Azure') {
            steps {
                script {
                    sshagent(['ab1ed2fc-ffdc-4b71-b710-476ae9705f3b']) {
                    sh """
                    ssh -o StrictHostKeyChecking=no ${env.VM_USER}@${env.VM_IP} "echo 'Logged in successfully'"
                    """
                }
            }
        }
        }
       stage('Deploy to Azure VM') {
    steps {
        dir('dashboard/starter-example') {
            script {
                def resourceGroup = 'Harshvardhan'
                def vmName = 'VM1'
                def vmIP = '20.224.162.44'
                def vmUser = 'azureuser'  // Replace with actual VM username

                // Ensure that .next directory exists and set permissions
                sh 'ls -la .next'
                sh 'chmod -R 755 .next'

                // Use sshagent to handle SSH connections
                sshagent(['ab1ed2fc-ffdc-4b71-b710-476ae9705f3b']) {
                    

                    // Copy files to the remote VM
                    sh """
                    whoami
                    
                    # Stop the existing application
                    sudo systemctl stop nginx

                    # Remove old application files
                    sudo rm -rf /var/www/html/*
                    
                    # Ensure permissions
                    sudo chmod -R 755 /var/www/html

                    ls -la /var/www/html/
                    ls -ld /var/www/html/
                    #copy files to remote VM
                    scp -o StrictHostKeyChecking=no -r .next/* /var/www/html/
                    
                    whoami
                    
                    # Start the application (Nginx)
                    sudo systemctl start nginx
                    """

                }
            }
        }
    }
}


        stage('Health Check') {
            steps {
                script {
                    def healthCheckUrl = "http://${VM_IP}"
                    def response = sh(script: "curl -s -o /dev/null -w '%{http_code}' ${healthCheckUrl}", returnStdout: true).trim()

                    if (response != '200') {
                        error "Health check failed with response code: ${response}"
                    } else {
                        echo "Health check passed."
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
